/* ************************************************************************** */
/* ********************** FILE DEFINITION SECTION *************************** */
/* ************************************************************************** */
/* File Name   : PUSH_int.h													  */
/* Author      : MAAM														  */
/* Version     : v01.2														  */
/* date        : Mar 30, 2023												  */
/* ************************************************************************** */
/* ************************ HEADER FILES INCLUDES **************************  */
/* ************************************************************************** */

#ifndef PUSH_INT_H_
#define PUSH_INT_H_

/* ************************************************************************** */
/* ********************** TYPE_DEF/STRUCT/ENUM SECTION ********************** */
/* ************************************************************************** */

typedef enum{
	PUSH_Active_Low = (u8)0u,
	PUSH_Active_High
}PUSH_tenuActive;

typedef enum{
	PUSH_RELEASED = (u8)0u,
	PUSH_PRESSED
}PUSH_tenuStatus;

/********************************************************************************************************************/

/** @brief : type define of structure for GPIO Push Configuration             */
/** <b>Type</b> : struct <b>Unit</b> : None                                   */
typedef struct{
	PUSH_tenuActive     m_Active;		/*!< Push Active */
	GPIO_tstrPinConfig  m_PinCfg;		/*!< Pin Configuration */
}PUSH_tstrConfig;

/* ************************************************************************** */
/* ************************** MACRO/DEFINE SECTION ************************** */
/* ************************************************************************** */

/* ************************************************************************** */
/* ***************************** CONST SECTION ****************************** */
/* ************************************************************************** */

/* ************************************************************************** */
/* ***************************** VARIABLE SECTION *************************** */
/* ************************************************************************** */

/* ************************************************************************** */
/* **************************** FUNCTION SECTION **************************** */
/* ************************************************************************** */

/* ************************************************************************** */
/* Description : Initialize the Push Button direction						  */
/* Input       :	u8PushNum												  */
/* Return      :	void													  */
/* ************************************************************************** */
extern void PUSH_vidInit(u8 u8PushNum);

/* ************************************************************************** */
/* Description : Initialize the All Push Button with Configurations			  */
/* Input       :	void													  */
/* Return      :	void													  */
/* ************************************************************************** */
extern void PUSH_vidInitAll(void);

/* ************************************************************************** */
/* Description :    Get the Push Button DeBouncing							  */
/* Input       :	u8PushNum												  */
/* Input/Output:    pu8State												  */
/* Return      :	LBTY_tenuErrorStatus									  */
/* ************************************************************************** */
extern LBTY_tenuErrorStatus PUSH_u8GetDebounce(u8 u8PushNum, u8* pu8State);

/* ************************************************************************** */
/* Description :    Get the Push Button value								  */
/* Input       :	u8PushNum												  */
/* Input/Output:    pu8State												  */
/* Return      :	LBTY_tenuErrorStatus									  */
/* ************************************************************************** */
extern LBTY_tenuErrorStatus PUSH_u8GetPushState(u8 u8PushNum, u8* pu8State);

#endif /* PUSH_INT_H_ */
/*************************** E N D (PUSH_int.h) ******************************/
